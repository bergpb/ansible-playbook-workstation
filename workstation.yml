---
- name: Preparing Workstation
  hosts: localhost
  connection: local
  tasks:

    - name: Installing Linux Apps
      become: true
      apt:
        name: '{{ item }}'
        install_recommends: yes
        state: present
      loop:
          - vim
          - htop
          - curl
          - wget
          - ncdu
          - tree
          - apt-transport-https
          - ca-certificates
          - gnupg
          - python3-pip
          - make
          - git
          - bash-completion
          - gnupg-agent
          - zsh
          - flameshot
          - fonts-hack
          - tilix
          - virtualbox
          - mlocate
          - jq
          - mtr
          - solaar
          - telegram-desktop
          - deluge
          - sqlite3
          - highlight
          - rar
      tags: common

    - block:
      - name: Verify if Oh-My-zsh is installed
        command: test -d /home/{{ ansible_user_id }}/.oh-my-zsh
        register: ohmyzsh
        ignore_errors: true
      - name: Installing Oh-My-zsh
        shell:
          cmd: 'curl -fsL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash'
          warn: false
        when: ohmyzsh.rc != 0
      - name: Changing Default Shell to ZSH
        become: yes
        user:
          name: '{{ ansible_user_id }}'
          shell: /bin/zsh
      - name: Changing Default ZSH Theme to bira
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^ZSH_THEME='
          line: 'ZSH_THEME="bira"'
      - name: Clone zsh-autosuggestions repository
        ansible.builtin.git:
          repo: 'https://github.com/zsh-users/zsh-autosuggestions'
          dest: /home/{{ ansible_user_id }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions
      - name: Add zsh-autosuggestions on ZSH plugins
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          regexp: '^plugins='
          line: 'plugins=(git zsh-autosuggestions)'
      - name: Creating ZSH Completion folder
        file:
          path: /home/{{ ansible_user_id }}/.oh-my-zsh/completions
          state: directory
          mode: 0755
      - name: Adding autoload to compinit
        lineinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          line: 'autoload -U compinit && compinit'
          state: present
      tags: zsh

    - block:
      - name: Download NVM installer
        get_url:
          url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh
          dest: /tmp/nvm_install.sh
      - name: Install NVM installer
        shell:
          cmd: /tmp/nvm_install.sh
          creates: "/home/{{ ansible_user_id }}/.nvm/nvm.sh"
        args:
          executable: /bin/bash
      - name: Add NVM into ZSH
        blockinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          block: |
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
            [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
          marker: "# {mark} ANSIBLE MANAGED BLOCK NVM"
      # - name: Install Node with NVM
      #   shell:
      #     cmd: nvm install node
      #   args:
      #     executable: /bin/bash
      #     chdir: "$HOME"
      tags: nvm

    - block:
      - name: Copy .bash_helpers to home directory
        copy:
          src: .bash_helpers
          dest: /home/{{ ansible_user_id }}/.bash_helpers
          mode: u=rw,g=r,o=r

      - name: Replace cat with highlight
        blockinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          block: |
            alias cat="highlight -O ansi --force"
          marker: "# {mark} ANSIBLE MANAGED BLOCK HIGHLIGHT"

      - name: Add VTE content in .zshrc file
        blockinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          block: |
            if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
                source /etc/profile.d/vte-2.91.sh
            fi
          marker: "# {mark} ANSIBLE MANAGED BLOCK VTE"

      - name: Add custom content in .zshrc file
        blockinfile:
          path: /home/{{ ansible_user_id }}/.zshrc
          block: |
            # set PATH so it includes user's private ~/.local/bin if it exists
            if [ -d "$HOME/.local/bin" ] ; then
                PATH="$HOME/.local/bin:$PATH"
            fi

            if [ -f ~/.bash_helpers ]; then
                . ~/.bash_helpers
            fi
          marker: "# {mark} ANSIBLE MANAGED BLOCK CUSTOM"
      tags: bash

    - block:
      - name: Install Google Key
        become: true
        apt_key:
          url: 'https://dl.google.com/linux/linux_signing_key.pub'
          state: present
      - name: Install Google Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main'
          state: present
          filename: google-chrome
      - name: Install Google Chrome
        become: true
        apt:
          name: google-chrome-stable
      tags: chrome

    - block:
      - name: Installing Vagrant 2.2.19
        become: true
        unarchive:
          src: 'https://releases.hashicorp.com/vagrant/2.2.19/vagrant_2.2.19_linux_amd64.zip'
          dest: /usr/local/bin
          remote_src: yes
      tags: vagrant

    - block:
      - name: Install Microsoft Key
        become: true
        apt_key:
          url: 'https://packages.microsoft.com/keys/microsoft.asc'
          state: present
      - name: Install VSCode Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main'
          state: present
          filename: vscode
      - name: Install Visual Studio Code
        become: true
        apt:
          name: code
      - name: Install Virtual Studio Code Extensions
        shell:
          cmd: code --install-extension '{{ item }}'
        loop:
          - aaron-bond.better-comments
          - alexcvzz.vscode-sqlite
          - ask-toolkit.alexa-skills-kit-toolkit
          - bbenoist.vagrant
          - bmewburn.vscode-intelephense-client
          - codezombiech.gitignore
          - dracula-theme.theme-dracula
          - eamodio.gitlens
          - esbenp.prettier-vscode
          - Gruntfuggly.todo-tree
          - hashicorp.terraform
          - hbenl.vscode-test-explorer
          - mhutchie.git-graph
          - ms-azuretools.vscode-docker
          - ms-python.python
          - ms-python.vscode-pylance
          - ms-toolsai.jupyter
          - ms-toolsai.jupyter-keymap
          - ms-toolsai.jupyter-renderers
          - ms-vscode-remote.remote-containers
          - ms-vscode.test-adapter-converter
          - njpwerner.autodocstring
          - oderwat.indent-rainbow
          - p1c2u.docker-compose
          - Perkovec.emoji
          - phplasma.csv-to-table
          - PKief.material-icon-theme
          - rebornix.ruby
          - redhat.vscode-yaml
          - sianglim.slim
          - whatwedo.twig
          - wingrunr21.vscode-ruby
      tags: vscode

    - block:
      - name: Install Docker Key
        become: true
        apt_key:
          url: 'https://download.docker.com/linux/ubuntu/gpg'
          state: present
      - name: Install Docker Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable'
          state: present
          filename: docker-ce
      - name: Install Docker
        become: true
        apt:
          name: docker-ce
      - name: Adding existing user to group Docker
        become: yes
        user:
          name: '{{ ansible_user_id }}'
          groups: docker
          append: yes
      - name: Creating .docker folder
        file:
          path: /home/{{ ansible_user_id }}/.docker/cli-plugins
          state: directory
          mode: 0755
      - name: Download docker-compose go binary
        get_url:
          url: https://github.com/docker/compose/releases/download/v2.2.2/docker-compose-linux-x86_64
          dest: /home/{{ ansible_user_id }}/.docker/cli-plugins/docker-compose
          mode: 0755
      tags: docker

    - block:
      - name: Add PHP 7.4 apt repository
        become: yes
        apt_repository:
          repo: ppa:ondrej/php
      - name: Install PHP 7.4 required packages
        become: yes
        apt:
          name: '{{ item }}'
          update_cache: yes
          state: present
        loop:
          - php7.4-cli
          - php7.4-opcache
          - php7.4-mbstring
          - php7.4-curl
      - name: Download script to install Composer
        become: yes
        get_url:
          url: https://getcomposer.org/installer
          dest: /tmp/composer-setup.php
      - name: Install Composer
        become: yes
        command:
          cmd: php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer
      tags: php

# OPTIONAL:
# - Brave Browser - Secure web browser
    - block:
      - name: Install Brave Key
        become: true
        apt_key:
          url: 'https://brave-browser-apt-release.s3.brave.com/brave-core.asc'
          state: present
      - name: Install Brave Repository
        become: true
        apt_repository:
          repo: 'deb [arch=amd64] https://brave-browser-apt-release.s3.brave.com/ stable main'
          state: present
          filename: brave
      - name: Install Brave Browser
        become: true
        apt:
          name: brave-browser
      tags: brave