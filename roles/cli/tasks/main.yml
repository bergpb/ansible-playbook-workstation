---
  - block:
    - name: Verify if Oh-My-zsh is installed
      command: test -d /home/{{ ansible_user_id }}/.oh-my-zsh
      register: ohmyzsh
      ignore_errors: true

    - name: Installing Oh-My-zsh
      shell:
        cmd: 'curl -fsL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh | bash'
        warn: false
      when: ohmyzsh.rc != 0

    - name: Changing Default Shell to ZSH
      become: true
      user:
        name: '{{ ansible_user_id }}'
        shell: /bin/zsh

    - name: Changing Default ZSH Theme to bira
      lineinfile:
        path: /home/{{ ansible_user_id }}/.zshrc
        regexp: '^ZSH_THEME='
        line: 'ZSH_THEME="bira"'

    - name: Clone zsh-autosuggestions repository
      ansible.builtin.git:
        repo: 'https://github.com/zsh-users/zsh-autosuggestions'
        dest: /home/{{ ansible_user_id }}/.oh-my-zsh/custom/plugins/zsh-autosuggestions

    - name: Add zsh-autosuggestions on ZSH plugins
      lineinfile:
        path: /home/{{ ansible_user_id }}/.zshrc
        regexp: '^plugins='
        line: 'plugins=(git zsh-autosuggestions)'

    - name: Creating ZSH Completion folder
      file:
        path: /home/{{ ansible_user_id }}/.oh-my-zsh/completions
        state: directory
        mode: 0755

    - name: Adding autoload to compinit
      lineinfile:
        path: /home/{{ ansible_user_id }}/.zshrc
        line: 'autoload -U compinit && compinit'
        state: present

    - name: Download NVM installer
      get_url:
        url: https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh
        dest: /tmp/nvm_install.sh

    - name: Install NVM installer
      shell:
        cmd: /tmp/nvm_install.sh
        creates: "/home/{{ ansible_user_id }}/.nvm/nvm.sh"
      args:
        executable: /bin/bash

    - name: Add NVM into ZSH
      blockinfile:
        path: /home/{{ ansible_user_id }}/.zshrc
        block: |
          export NVM_DIR="$HOME/.nvm"
          [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
          [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
        marker: "# {mark} ANSIBLE MANAGED BLOCK NVM"
    # - name: Install Node with NVM
    #   shell:
    #     cmd: nvm install node
    #   args:
    #     executable: /bin/bash
    #     chdir: "$HOME"

    - name: Copy .bash_helpers to home directory
      copy:
        src: files/.bash_helpers
        dest: /home/{{ ansible_user_id }}/.bash_helpers
        mode: u=rw,g=r,o=r

    - name: Create a batcat symlink
      file:
        src: /usr/bin/batcat
        dest: ~/.local/bin/bat
        state: link

    - name: Add a highlight alias
      blockinfile:
        path: /home/{{ ansible_user_id }}/.zshrc
        block: |
          alias highlight="highlight -O ansi --force"
        marker: "# {mark} ANSIBLE MANAGED BLOCK HIGHLIGHT"

    - name: Add VTE content in .zshrc file
      blockinfile:
        path: /home/{{ ansible_user_id }}/.zshrc
        block: |
          if [ $TILIX_ID ] || [ $VTE_VERSION ]; then
              source /etc/profile.d/vte-2.91.sh
          fi
        marker: "# {mark} ANSIBLE MANAGED BLOCK VTE"

    - name: Add custom content in .zshrc file
      blockinfile:
        path: /home/{{ ansible_user_id }}/.zshrc
        block: |
          # set PATH so it includes user's private ~/.local/bin if it exists
          if [ -d "$HOME/.local/bin" ] ; then
              PATH="$HOME/.local/bin:$PATH"
          fi

          if [ -f ~/.bash_helpers ]; then
              . ~/.bash_helpers
          fi
        marker: "# {mark} ANSIBLE MANAGED BLOCK CUSTOM"

    - name: Installing Vagrant 2.2.19
      become: true
      unarchive:
        src: 'https://releases.hashicorp.com/vagrant/2.2.19/vagrant_2.2.19_linux_amd64.zip'
        dest: /usr/local/bin
        remote_src: yes

    tags: cli